import 'package:flutter/material.dart';
import 'package:url_launcher/url_launcher.dart';

class TermsOfUseScreen extends StatelessWidget {
  const TermsOfUseScreen({super.key});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(
          '–£–º–æ–≤–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è',
          style: Theme.of(context).textTheme.displayMedium,
        ),
        centerTitle: false,
        backgroundColor: Theme.of(context).scaffoldBackgroundColor,
        elevation: 0,
      ),
      body: SingleChildScrollView(
        child: Padding(
          padding: const EdgeInsets.all(16.0),
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              _buildHeaderSection(context),
              const SizedBox(height: 24),
              _buildSocialResponsibilitySection(context),
              const SizedBox(height: 24),
              _buildSupportSection(context),
              const SizedBox(height: 32),
              _buildTermsSection(context),
              const SizedBox(height: 32),
              _buildPrivacySection(context),
              const SizedBox(height: 24),
              _buildAcceptanceSection(context),
              const SizedBox(height: 24),
              _buildInfo(context),
              const SizedBox(height: 64),
            ],
          ),
        ),
      ),
    );
  }

  Widget _buildHeaderSection(BuildContext context) {
    return Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        Text(
          'FitTrack ‚Äî —Ü–µ —Å—É—á–∞—Å–Ω–∏–π –º–æ–±—ñ–ª—å–Ω–∏–π –¥–æ–¥–∞—Ç–æ–∫ –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –ø—Ä–æ–≥—Ä–µ—Å—É —É —Å–ø–æ—Ä—Ç—ñ, '
              '–ø–æ—à—É–∫—É —Ç—Ä–µ–Ω—É–≤–∞–Ω—å —Ç–∞ –≤–∑–∞—î–º–æ–¥—ñ—ó –∑ —Ç—Ä–µ–Ω–∞–∂–µ—Ä–Ω–∏–º–∏ –∑–∞–ª–∞–º–∏. –ú–∏ –ø–æ—î–¥–Ω—É—î–º–æ –∑—Ä—É—á–Ω—ñ—Å—Ç—å, '
              '–º–æ—Ç–∏–≤–∞—Ü—ñ—é —Ç–∞ —Å–æ—Ü—ñ–∞–ª—å–Ω—É –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω—ñ—Å—Ç—å, —â–æ–± –∑—Ä–æ–±–∏—Ç–∏ —Ñ—ñ—Ç–Ω–µ—Å —á–∞—Å—Ç–∏–Ω–æ—é —Ç–≤–æ–≥–æ –∂–∏—Ç—Ç—è.',
          style: Theme.of(context).textTheme.bodyLarge,
        ),
      ],
    );
  }

  Widget _buildSocialResponsibilitySection(BuildContext context) {
    return _buildInfoCard(
      context,
      icon: Icons.favorite,
      iconColor: Colors.blue,
      title: '–°–æ—Ü—ñ–∞–ª—å–Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω—ñ—Å—Ç—å',
      content: '–ó –∫–æ–∂–Ω–æ—ó –ø–æ–∫—É–ø–∫–∏ –≤ –¥–æ–¥–∞—Ç–∫—É 5% —Å–ø—Ä—è–º–æ–≤—É—î—Ç—å—Å—è –Ω–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫—É –ø—Ä–æ—î–∫—Ç—É. –û–±–∏—Ä–∞—é—á–∏ FitTrack ‚Äî —Ç–∏ –Ω–µ –ª–∏—à–µ –¥–±–∞—î—à –ø—Ä–æ —Å–µ–±–µ, –∞ –π –¥–æ–ø–æ–º–∞–≥–∞—î—à —ñ–Ω—à–∏–º.',
    );
  }

  Widget _buildSupportSection(BuildContext context) {
    return _buildInfoCard(
      context,
      icon: Icons.support_agent,
      iconColor: Colors.orange,
      title: '–ü—ñ–¥—Ç—Ä–∏–º–∫–∞',
      content: '–Ø–∫—â–æ —É —Ç–µ–±–µ –≤–∏–Ω–∏–∫–ª–∏ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è –∞–±–æ —Ç–µ—Ö–Ω—ñ—á–Ω—ñ –ø—Ä–æ–±–ª–µ–º–∏ ‚Äî –º–∏ –∑–∞–≤–∂–¥–∏ –ø–æ—Ä—É—á. '
          '–ó–≤\'—è–∂–∏—Å—è –∑ –Ω–∞–º–∏:',
      extraWidget: InkWell(
        onTap: () => _launchEmail('stepanukdima524@gmail.com'),
        child: Text(
          'stepanukdima524@gmail.com',
          style: TextStyle(
            color: Theme.of(context).primaryColor,
            fontWeight: FontWeight.bold,
            decoration: TextDecoration.underline,
          ),
        ),
      ),
    );
  }

  Widget _buildTermsSection(BuildContext context) {
    return Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        Text(
          '–ó–∞–≥–∞–ª—å–Ω—ñ —É–º–æ–≤–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è',
          style: Theme.of(context).textTheme.titleLarge?.copyWith(
            fontWeight: FontWeight.bold,
          ),
        ),
        const SizedBox(height: 12),
        _buildTermItem(context, '–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –æ–±–ª—ñ–∫–æ–≤–æ–≥–æ –∑–∞–ø–∏—Å—É',
            '–î–ª—è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –≤—Å—ñ—Ö —Ñ—É–Ω–∫—Ü—ñ–π –¥–æ–¥–∞—Ç–∫—É –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ —Å—Ç–≤–æ—Ä–∏—Ç–∏ –æ–±–ª—ñ–∫–æ–≤–∏–π –∑–∞–ø–∏—Å. '
                '–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ—Å–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω—ñ—Å—Ç—å –∑–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –∫–æ–Ω—Ñ—ñ–¥–µ–Ω—Ü—ñ–π–Ω–æ—Å—Ç—ñ —Å–≤–æ–≥–æ –æ–±–ª—ñ–∫–æ–≤–æ–≥–æ –∑–∞–ø–∏—Å—É. '),
        _buildTermItem(context, '–û–ø–ª–∞—Ç–∞ —Ç–∞ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –∫–æ—à—Ç—ñ–≤',
            '–í—Å—ñ –ø–æ–∫—É–ø–∫–∏ –≤ –¥–æ–¥–∞—Ç–∫—É —î –æ—Å—Ç–∞—Ç–æ—á–Ω–∏–º–∏. –ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –∫–æ—à—Ç—ñ–≤ –º–æ–∂–ª–∏–≤–µ –ª–∏—à–µ —É –≤–∏–ø–∞–¥–∫–∞—Ö, '
                '–ø–µ—Ä–µ–¥–±–∞—á–µ–Ω–∏—Ö –∑–∞–∫–æ–Ω–æ–¥–∞–≤—Å—Ç–≤–æ–º –£–∫—Ä–∞—ó–Ω–∏.'),
        _buildTermItem(context, '–í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –∫–æ–Ω—Ç–µ–Ω—Ç—É',
            '–í–µ—Å—å –∫–æ–Ω—Ç–µ–Ω—Ç, —Ä–æ–∑–º—ñ—â–µ–Ω–∏–π —É –¥–æ–¥–∞—Ç–∫—É, —î –≤–ª–∞—Å–Ω—ñ—Å—Ç—é FitTrack –∞–±–æ –ª—ñ—Ü–µ–Ω–∑–æ–≤–∞–Ω–∏–º –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º. '
                '–ó–∞–±–æ—Ä–æ–Ω–µ–Ω–æ –∫–æ–ø—ñ—é–≤–∞—Ç–∏, —Ä–æ–∑–ø–æ–≤—Å—é–¥–∂—É–≤–∞—Ç–∏ –∞–±–æ –∫–æ–º–µ—Ä—Ü—ñ–π–Ω–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –±–µ–∑ –¥–æ–∑–≤–æ–ª—É.'),
        _buildTermItem(context, '–û–±–º–µ–∂–µ–Ω–Ω—è –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω–æ—Å—Ç—ñ',
            'FitTrack –Ω–µ –Ω–µ—Å–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω–æ—Å—Ç—ñ –∑–∞ –±—É–¥—å-—è–∫—ñ —Ç—Ä–∞–≤–º–∏, –ø–æ—à–∫–æ–¥–∂–µ–Ω–Ω—è –∞–±–æ –∑–±–∏—Ç–∫–∏, '
                '–ø–æ–≤\'—è–∑–∞–Ω—ñ –∑ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è–º –¥–æ–¥–∞—Ç–∫—É –∞–±–æ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è–º —Ç—Ä–µ–Ω—É–≤–∞–Ω—å.'),
      ],
    );
  }

  Widget _buildPrivacySection(BuildContext context) {
    return Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        Text(
          '–ö–æ–Ω—Ñ—ñ–¥–µ–Ω—Ü—ñ–π–Ω—ñ—Å—Ç—å —Ç–∞ –¥–∞–Ω—ñ',
          style: Theme.of(context).textTheme.titleLarge?.copyWith(
            fontWeight: FontWeight.bold,
          ),
        ),
        const SizedBox(height: 12),
        _buildTermItem(context, '–ó–±—ñ—Ä –¥–∞–Ω–∏—Ö',
            '–ú–∏ –∑–±–∏—Ä–∞—î–º–æ –¥–∞–Ω—ñ –ø—Ä–æ –≤–∞—à—ñ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è, —Ñ—ñ–∑–∏—á–Ω—ñ –ø–æ–∫–∞–∑–Ω–∏–∫–∏ —Ç–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –¥–æ–¥–∞—Ç–∫—É –¥–ª—è '
                '–ø–æ–∫—Ä–∞—â–µ–Ω–Ω—è –≤–∞—à–æ–≥–æ –¥–æ—Å–≤—ñ–¥—É —Ç–∞ –≤–¥–æ—Å–∫–æ–Ω–∞–ª–µ–Ω–Ω—è —Å–µ—Ä–≤—ñ—Å—É.'),
        _buildTermItem(context, '–ó–∞—Ö–∏—Å—Ç –¥–∞–Ω–∏—Ö',
            '–ú–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Å—É—á–∞—Å–Ω—ñ —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ—ó –¥–ª—è –∑–∞—Ö–∏—Å—Ç—É –≤–∞—à–∏—Ö –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∏—Ö –¥–∞–Ω–∏—Ö —Ç–∞ '
                '–¥–æ—Ç—Ä–∏–º—É—î–º–æ—Å—å –≤–∏–º–æ–≥ –∑–∞–∫–æ–Ω–æ–¥–∞–≤—Å—Ç–≤–∞ —â–æ–¥–æ –∑–∞—Ö–∏—Å—Ç—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∏—Ö –¥–∞–Ω–∏—Ö.'),
        _buildTermItem(context, '–û–±–º—ñ–Ω –¥–∞–Ω–∏–º–∏',
            '–í–∞—à—ñ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ñ –¥–∞–Ω—ñ –Ω–µ –±—É–¥—É—Ç—å –ø–µ—Ä–µ–¥–∞–Ω—ñ —Ç—Ä–µ—Ç—ñ–º —Å—Ç–æ—Ä–æ–Ω–∞–º –±–µ–∑ –≤–∞—à–æ—ó –∑–≥–æ–¥–∏, –æ–∫—Ä—ñ–º '
                '–≤–∏–ø–∞–¥–∫—ñ–≤, –ø–µ—Ä–µ–¥–±–∞—á–µ–Ω–∏—Ö –∑–∞–∫–æ–Ω–æ–¥–∞–≤—Å—Ç–≤–æ–º.'),
      ],
    );
  }

  Widget _buildAcceptanceSection(BuildContext context) {
    return Container(
      padding: const EdgeInsets.all(16.0),
      decoration: BoxDecoration(
        color: Theme.of(context).primaryColor.withOpacity(0.1),
        borderRadius: BorderRadius.circular(16),
      ),
      child: Text(
        '–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ –¥–æ–¥–∞—Ç–æ–∫ FitTrack, –≤–∏ –ø–æ–≥–æ–¥–∂—É—î—Ç–µ—Å—è –∑ —É—Å—ñ–º–∞ —É–º–æ–≤–∞–º–∏, –≤–∏–∫–ª–∞–¥–µ–Ω–∏–º–∏ –Ω–∞ —Ü—ñ–π —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ. '
            '–ú–∏ –∑–±–µ—Ä—ñ–≥–∞—î–º–æ –∑–∞ —Å–æ–±–æ—é –ø—Ä–∞–≤–æ –∑–º—ñ–Ω—é–≤–∞—Ç–∏ —Ü—ñ —É–º–æ–≤–∏ –≤ –±—É–¥—å-—è–∫–∏–π —á–∞—Å, –ø–æ–≤—ñ–¥–æ–º–ª—è—é—á–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ '
            '—á–µ—Ä–µ–∑ –¥–æ–¥–∞—Ç–æ–∫ –∞–±–æ –µ–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É –ø–æ—à—Ç—É.',
        style: Theme.of(context).textTheme.bodyMedium?.copyWith(
          fontStyle: FontStyle.italic,
        ),
      ),
    );
  }

  Widget _buildInfo(BuildContext context) {
    return Container(
      width: double.infinity,
      padding: const EdgeInsets.all(16.0),
      decoration: BoxDecoration(
        color: Theme.of(context).primaryColor.withOpacity(0.1),
        borderRadius: BorderRadius.circular(16),
      ),
      child: Text(
        '–î—è–∫—É—é—î–º–æ —â–æ –æ–±–∏—Ä–∞—î—Ç–µ FitTrack üß°',
        style: Theme.of(context).textTheme.bodyMedium,
        textAlign: TextAlign.center,
      ),
    );
  }

  Widget _buildInfoCard(
      BuildContext context, {
        required IconData icon,
        required Color iconColor,
        required String title,
        required String content,
        Widget? extraWidget,
      }) {
    return Container(
      padding: const EdgeInsets.all(16.0),
      decoration: BoxDecoration(
        color: Theme.of(context).cardColor,
        borderRadius: BorderRadius.circular(16),
        boxShadow: [
          BoxShadow(
            color: Colors.black.withOpacity(0.05),
            blurRadius: 10,
            offset: const Offset(0, 4),
          ),
        ],
      ),
      child: Row(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Container(
            padding: const EdgeInsets.all(12),
            decoration: BoxDecoration(
              color: iconColor.withOpacity(0.1),
              borderRadius: BorderRadius.circular(12),
            ),
            child: Icon(
              icon,
              color: iconColor,
              size: 28,
            ),
          ),
          const SizedBox(width: 16),
          Expanded(
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                Text(
                  title,
                  style: Theme.of(context).textTheme.titleMedium?.copyWith(
                    fontWeight: FontWeight.bold,
                  ),
                ),
                const SizedBox(height: 8),
                Text(
                  content,
                  style: Theme.of(context).textTheme.bodyMedium,
                ),
                if (extraWidget != null) ...[
                  const SizedBox(height: 8),
                  extraWidget,
                ],
              ],
            ),
          ),
        ],
      ),
    );
  }

  Widget _buildTermItem(BuildContext context, String title, String content) {
    return Padding(
      padding: const EdgeInsets.only(bottom: 16.0),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Text(
            title,
            style: Theme.of(context).textTheme.titleSmall?.copyWith(
              fontWeight: FontWeight.bold,
            ),
          ),
          const SizedBox(height: 4),
          Text(
            content,
            style: Theme.of(context).textTheme.bodyMedium,
          ),
        ],
      ),
    );
  }

  Future<void> _launchEmail(String email) async {
    final Uri emailUri = Uri(
      scheme: 'mailto',
      path: email,
    );

    if (await canLaunchUrl(emailUri)) {
      await launchUrl(emailUri);
    }
  }
}